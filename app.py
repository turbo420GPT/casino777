import streamlit as st
import aiosqlite
import asyncio
import json
from streamlit_telegram_login import TelegramLogin

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="–ö–∞–∑–∏–Ω–æ Telegram",
    page_icon="üé∞",
    layout="wide"
)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Å—Å–∏–∏
if 'user_data' not in st.session_state:
    st.session_state.user_data = None

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async def get_user_balance(user_id):
    async with aiosqlite.connect("casino.db") as db:
        async with db.execute("SELECT balance FROM users WHERE user_id = ?", (user_id,)) as cursor:
            result = await cursor.fetchone()
            return result[0] if result else 1000

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞
async def update_balance(user_id, amount):
    async with aiosqlite.connect("casino.db") as db:
        await db.execute("""
            INSERT INTO users (user_id, balance) 
            VALUES (?, 1000) 
            ON CONFLICT(user_id) DO UPDATE SET balance = balance + ?
        """, (user_id, amount))
        await db.commit()

# –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
st.title("üé∞ –ö–∞–∑–∏–Ω–æ Telegram")

# –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ Telegram
try:
    user_data = TelegramLogin(
        bot_token=st.secrets["BOT_TOKEN"],
        button_style="large",
        corner_radius=5,
        request_access=True,
        show_user_photo=True
    ).render()

    if user_data and isinstance(user_data, dict):
        st.session_state.user_data = user_data
        st.success(f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user_data.get('first_name', '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å')}!")
except Exception as e:
    st.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {str(e)}")
    st.stop()

# –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∫–∞–∑–∏–Ω–æ
if st.session_state.user_data:
    user_id = st.session_state.user_data['id']
    
    # –ü–æ–ª—É—á–∞–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    balance = asyncio.run(get_user_balance(user_id))
    
    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –±–∞–ª–∞–Ω—Å
    st.subheader(f"üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: {balance} –º–æ–Ω–µ—Ç")
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ–ª–æ–Ω–∫–∏ –¥–ª—è –∏–≥—Ä
    col1, col2 = st.columns(2)
    
    with col1:
        st.header("üé∞ –°–ª–æ—Ç—ã")
        bet = st.number_input("–í–∞—à–∞ —Å—Ç–∞–≤–∫–∞:", min_value=1, max_value=balance, value=1)
        
        if st.button("–ö—Ä—É—Ç–∏—Ç—å"):
            # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –∏–≥—Ä—ã –≤ —Å–ª–æ—Ç—ã
            # –ü–æ–∫–∞ —á—Ç–æ –ø—Ä–æ—Å—Ç–æ –æ–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
            win = bet * 2  # –ü—Ä–∏–º–µ—Ä –≤—ã–∏–≥—Ä—ã—à–∞
            asyncio.run(update_balance(user_id, win))
            st.success(f"–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {win} –º–æ–Ω–µ—Ç!")
            st.balloons()
    
    with col2:
        st.header("üé≤ –î—Ä—É–≥–∏–µ –∏–≥—Ä—ã")
        st.info("–°–∫–æ—Ä–æ –ø–æ—è–≤—è—Ç—Å—è –Ω–æ–≤—ã–µ –∏–≥—Ä—ã!")

# –°—Ç–∏–ª–∏–∑–∞—Ü–∏—è
st.markdown("""
<style>
    .stApp {
        background-color: #1E1E1E;
        color: white;
    }
    .stButton>button {
        background-color: #4CAF50;
        color: white;
        border-radius: 5px;
        padding: 10px 20px;
        font-size: 16px;
    }
    .stNumberInput>div>div>input {
        background-color: #2E2E2E;
        color: white;
    }
</style>
""", unsafe_allow_html=True) 